# Minimize max difference between the heights
# https://practice.geeksforgeeks.org/problems/minimize-the-heights3351/1

#User function Template for python3

class Solution:
    def getMinDiff(self, arr, n, k):
        # code here 
        # Initially sort the tower heights
        arr.sort()
        
        # shortest height
        min_ht = arr[0]
        
        # tallest height
        max_ht = arr[n-1]
        
        # store initial height diff
        ans = max_ht - min_ht
        
        # add value k to each element of arr
        # starting from pos 1 till n
        for i in range(1, n):
            # if arr[i] < k
            # ignore as arr can't have -ve val
            if arr[i] < k:
                continue
            
            # calc temp min of
            temp_min = min(arr[0]+k, arr[i]-k)
            
            # calc temp max
            temp_max = max(arr[i-1]+k, arr[n-1]-k)
            
            ans = min(ans, temp_max-temp_min)
        return ans


#{ 
 # Driver Code Starts
#Initial Template for Python 3

if __name__ == '__main__':
    tc = int(input())
    while tc > 0:
        k = int(input())
        n = int(input())
        arr = list(map(int, input().strip().split()))
        ob = Solution()
        ans = ob.getMinDiff(arr, n, k)
        print(ans)
        tc -= 1

# } Driver Code Ends
