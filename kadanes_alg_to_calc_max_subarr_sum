# Kadanes Algorithm to calculate maximum sum in contiguous sub array
# https://practice.geeksforgeeks.org/problems/kadanes-algorithm-1587115620/1
#User function Template for python3

class Solution:
    ##Complete this function
    #Function to find the sum of contiguous subarray with maximum sum.
    def maxSubArraySum(self,arr,N):
        ##Your code here
        # Kadanes Algorithm
        # 
        # max_so_far = -10000000 # Previous or initial sum
        # max_ending_here  = 0  # New sum that occurs after adding new elm from arr
        # for i in range(N):
        #     max_ending_here = max_ending_here + arr[i]
        #     if max_so_far < max_ending_here:
        #         max_so_far = max_ending_here
        #     if max_ending_here < 0:
        #         max_ending_here = 0
        # return max_so_far
        
        # Using D.P
        current_max = arr[0]
        max_sum = arr[0]
        
        for i in range(1, N):
            current_max = max(arr[i], arr[i]+current_max)
            max_sum = max(current_max, max_sum)
        return max_sum
        
                
        


#{ 
 # Driver Code Starts
#Initial Template for Python 3

import math

 
def main():
        T=int(input())
        while(T>0):
            
            n=int(input())
            
            arr=[int(x) for x in input().strip().split()]
            
            ob=Solution()
            
            print(ob.maxSubArraySum(arr,n))
            
            T-=1


if __name__ == "__main__":
    main()
# } Driver Code Ends
